<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdl.elm.dao.ProductInfoDao">

    <resultMap type="com.sdl.elm.entity.ProductInfo" id="ProductInfoMap">
        <result property="productId" column="product_id" jdbcType="INTEGER"/>
        <result property="productName" column="product_name" jdbcType="VARCHAR"/>
        <result property="productPrice" column="product_price" jdbcType="NUMERIC"/>
        <result property="productStock" column="product_stock" jdbcType="INTEGER"/>
        <result property="productDescription" column="product_description" jdbcType="VARCHAR"/>
        <result property="productIcon" column="product_icon" jdbcType="VARCHAR"/>
        <result property="categoryType" column="category_type" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="productStatus" column="product_status" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ProductInfoMap">
        select
          product_id, product_name, product_price, product_stock, product_description, product_icon, category_type, create_time, update_time, product_status
        from elm.product_info
        where product_id = #{productId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ProductInfoMap">
        select
          product_id, product_name, product_price, product_stock, product_description, product_icon, category_type, create_time, update_time, product_status
        from elm.product_info
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ProductInfoMap">
        select
          product_id, product_name, product_price, product_stock, product_description, product_icon, category_type, create_time, update_time, product_status
        from elm.product_info
        <where>
            <if test="productId != null">
                and product_id  like concat('%', #{productId}, '%')
            </if>
            <if test="productName != null and productName != ''">
                and product_name like concat('%', #{productName}, '%')
            </if>
            <if test="productDescription != null and productDescription != ''">
                and product_description like concat('%', #{productDescription}, '%')
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="productId" useGeneratedKeys="true">
        insert into elm.product_info(product_name, product_price, product_stock, product_description, product_icon, category_type, create_time, update_time, product_status)
        values (#{productName}, #{productPrice}, #{productStock}, #{productDescription}, #{productIcon}, #{categoryType}, #{createTime}, #{updateTime}, #{productStatus})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update elm.product_info
        <set>
            <if test="productName != null and productName != ''">
                product_name = #{productName},
            </if>
            <if test="productPrice != null">
                product_price = #{productPrice},
            </if>
            <if test="productStock != null">
                product_stock = #{productStock},
            </if>
            <if test="productDescription != null and productDescription != ''">
                product_description = #{productDescription},
            </if>
            <if test="productIcon != null and productIcon != ''">
                product_icon = #{productIcon},
            </if>
            <if test="categoryType != null">
                category_type = #{categoryType},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="productStatus != null">
                product_status = #{productStatus},
            </if>
        </set>
        where product_id = #{productId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from elm.product_info where product_id = #{productId}
    </delete>

</mapper>